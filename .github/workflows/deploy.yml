name: Deploy Flask Backend to Azure Container App

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push container image to registry
      uses: docker/build-push-action@v4
      with:
        context: server
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/lookmaxx-backend:${{ github.sha }}
        file: server/Dockerfile
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        build-args: |
          BUILDPLATFORM=linux/amd64
        platforms: linux/amd64
        outputs: type=image,compression-level=9,force-compression=true

    - name: Update cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Deploy to Azure Container App
      uses: azure/container-apps-deploy-action@v1
      with:
        acrName: ${{ secrets.ACR_NAME }}
        containerAppName: ${{ secrets.CONTAINER_APP_NAME }}
        resourceGroup: ${{ secrets.RESOURCE_GROUP }}
        imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/lookmaxx-backend:${{ github.sha }}
        targetPort: 8080
        environmentVariables: |
          PORT=8080
          GUNICORN_CMD_ARGS=--workers=2 --timeout=600 --log-level=debug
          FLASK_ENV=production
          DEBUG=False
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          API_TIMEOUT=${{ secrets.API_TIMEOUT || 30 }}
          API_VERSION=${{ secrets.API_VERSION || 'v1' }}
          # Add other environment variables from secrets as needed
